RMS
Publishers

There are three ways of publishing information, the normal 
publish, the timed publish, and the non-interupt publish. 
The publish functions begin by creating a new thread for 
publishing. Once the new thread is created the node connects 
to the master node through the masterPub.ipc file, using 
nanomsg's request protocol. The node then sends the name of 
the topic to publish to, to the master. Then the master node 
sends the publisher the name of the file to start publishing
to. The publisher then binds to this file using nanomsg's
publish protocol. This is where the differences between the 
methods of publishing come in. The normal publish function
will continuously send data to the topic in nanomsg's non
blocking mode. The timed funciton will send the data in blocking mode, but will also sleep for a set number of seconds 
before publishing again. The non-interupt function will 
continuously send data in nanomsg's blocking mode.


The memory usage of the publish function is ~12kb.

Example:

char * stuffToPub = (char *)malloc(10*sizeOf(Char));
strcpy(stuffToPub, "Hi Jason");
int size[1];
size[0] = 9;

publish("Example topic", size, (void *)&stuffToPub);


